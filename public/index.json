[{"authors":null,"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n  Download my resumé.\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1567641600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/nelson-bighetti/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/nelson-bighetti/","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Nelson Bighetti","type":"authors"},{"authors":null,"categories":null,"content":"William Cruz is a psychologist with experience as data manager and background in educational and psychological testing. Skilled in statistical analyses, automation procedures and scripting for cognitive and psychological assessment procedures using MATLAB and R. Strong research background with a Degree in Master of Science from National Cheng-chi University. Private language tutor including both Spanish and English.\n  Download my resumé.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"daaee66d7b2ce93dd9a2549fe92ebafb","permalink":"/author/william-cruz-molina-%E5%AD%9F%E5%A8%81%E5%BB%89/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/william-cruz-molina-%E5%AD%9F%E5%A8%81%E5%BB%89/","section":"authors","summary":"William Cruz is a psychologist with experience as data manager and background in educational and psychological testing. Skilled in statistical analyses, automation procedures and scripting for cognitive and psychological assessment","tags":null,"title":"William Cruz Molina 孟威廉","type":"authors"},{"authors":null,"categories":null,"content":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"da99cb196019cc5857b9b3e950397ca9","permalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology","tags":null,"title":"吳恩達","type":"authors"},{"authors":null,"categories":null,"content":"In order to start working with R you need to prepare your working space or environment, this involves downloading, installing and loading the packages that will be required by the processes you want to perform; sometimes it also involves specifying what will be the encoding of your script, whether to turn off the scientific notation when getting an output among others such as set the CRAN repository from which you would desire to download the packages, etc.\n Setting packages repository Download, Install and Load packages Change, Set working directory Script encoding, scientific notation among other miscelaneous features  Setting packages repository The list of exhaustive CRAN repositories can be found in the following website https://cran.r-project.org/mirrors.html, choose a location close to you.\nr \u0026lt;- getOption(\u0026quot;repos\u0026quot;) r[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;https://www.icesi.edu.co/CRAN/\u0026quot; # Repository used in Colombia r[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;http://cran.csie.ntu.edu.tw/\u0026quot; # Repository used in Taiwan options(repos=r)  Download, Install and Load packages The most simple way is to identify the name of the package and enter the following lines in the console for downloading, installing and loading a package into the current working environment. You only need to perform this once for installing a package, but if you restart a session you ought to load the required package everytime with the library() command.\n.libPaths() # Generates the current path were packages are saved, change if neccesary install.packages('openxlsx') # install the package to your local disk library('openxlsx') # load the pacakge into your current  Other functions related with package management include the following\nremove.packages('agricolae') # Remove package from your local disk installed.packages() # Generates a list of the currently installed packages update.packages() # updates the currently installed packages k\u0026lt;-as.data.frame(installed.packages(),stringsAsFactors = FALSE) # consult installed packages as a data frame  For large scripts or function in which you might require a large number of packages different approaches are plausible, as the following\n.libPaths(\u0026quot;/Users/williamcruz/Documents/R Packages\u0026quot;) # change the path accordingly to your packages folder r \u0026lt;- getOption(\u0026quot;repos\u0026quot;) r[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;http://cran.csie.ntu.edu.tw/\u0026quot; # set repository to a National Repository in your country options(repos=r) x \u0026lt;- c('ggplot2','openxlsx','plyr') # a list of packages to be used packages \u0026lt;- as.data.frame(installed.packages()) # List of currently installed packages for (i in 1:length(x)) { if(x[i] %in% packages$Package == TRUE){ library(x[i],character.only = TRUE) }else if(x[i] %in% packages$Package == FALSE){ install.packages(as.character(x[i])) library(x[i],character.only = TRUE) } }  The next option involves to have downloaded the pacman package, but is also a good and compact option when you need to load several packages at the beggining of a session.\nlibrary(pacman) pacman::p_load(simstudy,minerva,pcaPP,parallel,dplyr,ggplot2,grid, scales,plyr,ggthemes,ggrepel,ggpubr,simFrame,corTest)  Change, set working directory Some of the procedures you perform in R\ngetwd() # print the current working directory - cwd setwd('a valid directory path') # set the working directory to the specified path dir() # Produce a vector of the file names in the current wd dir(\u0026quot;name of directory\u0026quot;) # allows to choose one file within the cwd  Miscelaneous Features Some other workspace frequently used commands include the following\noptions(scipen = 99) # turn off scientific notation (optional) options(encoding = \u0026quot;UTF-8\u0026quot;) # Select the encoding of the files, not absolutely required rm(list=ls()) # Erasing all objects from the current work environment cat(\u0026quot;\\014\u0026quot;) # Erasing previous commands from the console ls() # list the objects in the current workspace ls(pat = \u0026quot;m\u0026quot;) # list the objects that have in their name a given pattern ls(pat = \u0026quot;^m\u0026quot;) # Lists objects whose name start with m ls.str(pat= \u0026quot;M\u0026quot;, max.level=-1) # Reduces the level of information ls.str() # Display some details of the objects in memory rm(list=ls()) # Erasing all objects from the current work environment m \u0026lt;- as.data.frame(list.files(),stringsAsFactors = FALSE) # make a data frame out of the files names in the current wd m$index \u0026lt;- as.numeric(m$'list.files()' == 'x') # Procedure to check whether a file exist or not in the current wd help(options) # learn about available options help('bs') | help('bs', package = 'splines') # Search info about the funcion bs apropos('lm') # Finds all functions which name contains the character string given as measure options() # view current option settings options(digits=3) # number of digits to print on output history() # display last 25 commands history(max,show=Inf) # display all previous commands savehistory(file=\u0026quot;myfile\u0026quot;) # default is \u0026quot;.Rhistory\u0026quot; loadhistory(file= \u0026quot;myfile\u0026quot;) # default is \u0026quot;.Rhistory\u0026quot; save.image() # save the workspace to the file .RData in the cwd save(x, file=\u0026quot;myfile,RData\u0026quot;) # save specific objects to a file n \u0026lt;- list(MP=MP,MP.original=MP.original) save(n, file= \u0026quot;myfile.RData\u0026quot;) # save specific objects to a file load(\u0026quot;myfile.RData\u0026quot;) # load a workspace into the current session q() # quit R. You will be prompted to save the workspace rm(x) # Deletes the object x rm(x,y) # Deletes both objects x and y rm(list=ls()) # Deletes all objects in memory rm(list=ls(pat= \u0026quot;^m\u0026quot;)) # Deletes selectively some objects ?lm # How the linear model function works help(lm) # Same as above help(\u0026quot;lm\u0026quot;) # Same as above help(lm, try.all.packages=TRUE) # allows to search in all packages help(\u0026quot;bs\u0026quot;, package = \u0026quot;splines\u0026quot;) # Display help pages from a package not loaded in memory help.start() # A search with keywords is possible with this html help help.start(\u0026quot;tree\u0026quot;, rebuild=TRUE) # refresh the database used apropos(\u0026quot;help\u0026quot;) # finds all functions which name contains the given character string  ","date":1610323200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1610323200,"objectID":"902a081438c4ed47bf65a32e1d79cb22","permalink":"/courses/01_r_workspacecommands/","publishdate":"2021-01-11T00:00:00Z","relpermalink":"/courses/01_r_workspacecommands/","section":"courses","summary":"Learn about the most frequently used workspace commands for R.","tags":null,"title":"Workspace Commands","type":"docs"},{"authors":null,"categories":null,"content":"Example working directory setup This is one of the working directory setups I frequently use, you can extend the number of packages as required\n.libPaths(\u0026quot;/Users/williamcruz/Documents/R Packages\u0026quot;) # change the path accordingly to your packages folder r \u0026lt;- getOption(\u0026quot;repos\u0026quot;) r[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;http://cran.csie.ntu.edu.tw/\u0026quot; # set repository to a National Repository in your country options(repos=r) library(pacman) pacman::p_load(simstudy,minerva,pcaPP,parallel,dplyr,ggplot2,grid, scales,plyr,ggthemes,ggrepel,ggpubr,simFrame,corTest) options(scipen = 99) # turn off scientific notation (optional) options(encoding = \u0026quot;UTF-8\u0026quot;) # Select the encoding of the files, not absolutely required rm(list=ls()) # Erasing all objects from the current work environment cat(\u0026quot;\\014\u0026quot;) # Erasing previous commands from the console  ","date":1610319600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610319600,"objectID":"d529c8fd66f22c2d66a191b31f081e30","permalink":"/courses/01_r_workspacecommands/example1/","publishdate":"2021-01-11T00:00:00+01:00","relpermalink":"/courses/01_r_workspacecommands/example1/","section":"courses","summary":"Example working directory setup This is one of the working directory setups I frequently use, you can extend the number of packages as required\n.libPaths(\u0026quot;/Users/williamcruz/Documents/R Packages\u0026quot;) # change the path accordingly to your packages folder r \u0026lt;- getOption(\u0026quot;repos\u0026quot;) r[\u0026quot;CRAN\u0026quot;] \u0026lt;- \u0026quot;http://cran.","tags":null,"title":"Example Setup","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"knitr::opts_chunk$set(echo = TRUE)  Cluster analysis Preparation of the Environment and aesthetics\nlibrary(pacman) #' Environment preparation pacman::p_load(plyr,psych,openxlsx,fpc,pvclust,cluster,mclust, factoextra,flexclust,reshape,knitr,dendextend,plotly, dplyr,magrittr,ggpubr,corrplot,ggthemes,scales) # added for MDS and intervariable correlation setwd('/Users/williamcruz/Desktop/4_COMPU_SCI/B_WebsiteW/WebsiteW/content/project/Hyerarchical-Analysis/dta') dt \u0026lt;- read.xlsx('dt.xlsx',sheet = 3, rowNames = TRUE)  Before starting the cluster analysis it is preferred to leave the most informative variables in the data set, for doing it so a common way to visualize correlation matrices is a heatmap which can identify what variables have a small or non correlation with each other. From the heatmap below as well as from the correlation coefficient table we can identify that at least two variables targe and route have small (\u0026gt; 0.35 \u0026amp; \u0026gt;-0.35) correlation coefficients, thus and for further analyses these two variables will be excluded from further analyses.\nres.cor \u0026lt;- cor(dt, method = 'spearman') # correlation matrix mds.cor \u0026lt;- (1- res.cor) %\u0026gt;% # using MDS to reveal hidden patterns in correlation matrix cmdscale() %\u0026gt;% as_tibble() colnames(mds.cor) \u0026lt;- c('Dim.1','Dim.2') plot_cor01 \u0026lt;- ggscatter(mds.cor, x = 'Dim.1', y = 'Dim.2', label = colnames(res.cor), size = 1, repel = T)+ theme_classic() + ggtitle('MDS for correlation coefficient between variables') plot_cor01 plot_cor02 \u0026lt;- corrplot::corrplot(res.cor) t00 \u0026lt;- kable(res.cor, format = \u0026quot;html\u0026quot;, digits = 2) t00     MDS Correlation Heatmap Correlation          Next, some of the preliminary steps included remove missing values and scale the data as shown below\nmydata \u0026lt;- subset(dt,select=c(1:5,8:9)) mydata \u0026lt;- na.omit(mydata) # listwise deletion of missing data mydata \u0026lt;- scale(mydata, center = TRUE, scale = TRUE) # scale the data  Hierarchical Clustering methods The next step consist in assessing different hierarchical clustering (HC) methods and identy which one provides a stronger clustering structure. Below some agglomerative clustering algorithms are explored, these algorithms initally consider each object as a single-element cluster and at each step, the next two similar elements are combined into a cluster. The closer the agglomerative coefficient is to 1 the stronger is the clustering structure, for computing it the function agnes of the package cluster will be used.\nm \u0026lt;- c(\u0026quot;average\u0026quot;,\u0026quot;single\u0026quot;,\u0026quot;complete\u0026quot;,\u0026quot;ward\u0026quot;); names(m) \u0026lt;- c(\u0026quot;average\u0026quot;,\u0026quot;single\u0026quot;,\u0026quot;complete\u0026quot;,\u0026quot;ward\u0026quot;) ac \u0026lt;- function(x){ # function to compute the coefficient agnes(mydata, method = x)$ac } purrr::map_dbl(m,ac) # agglomerative coefficient through the agnes() function     average single complete ward     0.7978476 0.7146516 0.8520016 0.9232789    Then, find out the preferred number of cluster to extract using different HC methods. The following figure compares the results obtained by the elbow, silhouette and gap statistic methods. From the figures below there is no definitive clear optimal number of clusters; nonetheless, the silhouette method suggests 5 clusters and it is the most parsimonious.\np1 \u0026lt;- fviz_nbclust(mydata, FUN = hcut, method = \u0026quot;wss\u0026quot;, k.max = 10)+ # WSS method ggtitle(\u0026quot;(A) Elbow method\u0026quot;)+theme_classic() p2 \u0026lt;- fviz_nbclust(mydata, FUN = hcut, method = \u0026quot;silhouette\u0026quot;, k.max = 10)+ # Silhouette method ggtitle(\u0026quot;(B) Silhouette method\u0026quot;)+theme_classic() p3 \u0026lt;- fviz_nbclust(mydata, FUN = hcut, method = \u0026quot;gap_stat\u0026quot;, k.max = 10)+ # Gap method ggtitle(\u0026quot;(C) Gap statistic\u0026quot;)+theme_classic() gridExtra::grid.arrange(p1,p2,p3, nrow=1)  Then, perform the agglomerative HC using the hlcust()function for the two methods that resulted to have a larger agglomerative coefficient, but first compute the dissimilarity values with the dist() function using the Euclidean method, also call distance matrix following the pythagorean theorem.\nd \u0026lt;- dist(mydata, method = \u0026quot;euclidean\u0026quot;) # distance matrix using Euclidean method (dissimilarity matrix?) hc1 \u0026lt;- hclust(d, method = \u0026quot;ward.D2\u0026quot;) # HC using the Ward's method hc2 \u0026lt;- hclust(d, method = \u0026quot;complete\u0026quot;) # HC using the Complete method sub_grp0 \u0026lt;- cutree(hc1,k=5) # using 5 as the number of clusters to extract sub_grp1 \u0026lt;- cutree(hc2,k=5) table(sub_grp0) # number of members in each cluster in Ward solution table(sub_grp1) # number of members in each cluster in Complete solution  Plot the dendogram highlighting the 5 clusters previously obtained\np4 \u0026lt;- fviz_dend(hc1,k=5, horiz = FALSE, rect = TRUE, rect_fill = TRUE, rect_border = \u0026quot;jco\u0026quot;, k_colors = \u0026quot;jco\u0026quot;)+ ggtitle(\u0026quot;Dendogram using Ward's solution\u0026quot;)+theme_classic() p5 \u0026lt;- fviz_dend(hc2,k=5, horiz = FALSE, rect = TRUE, rect_fill = TRUE, rect_border = \u0026quot;jco\u0026quot;, k_colors = \u0026quot;jco\u0026quot;)+ ggtitle(\u0026quot;Dendogram using Complete solution\u0026quot;)+theme_classic() gridExtra::grid.arrange(p4,p5, nrow=1)  In addition the pvclust() function provides p-values for HC based on multiscale bootstrap resampling. Clusters higly supported by the data will have conversely larger p-values. p-values are computed for each of the clusters. The following figure encloses the clusters that are significant at a given alpha value using the pvrect function.\nmydata2 \u0026lt;- data.frame(t(mydata)) fit \u0026lt;- pvclust(mydata2, method.hclust = \u0026quot;ward.D\u0026quot;, method.dist = \u0026quot;euclidean\u0026quot;) plot(fit) + pvrect(fit, alpha=0.99) fit \u0026lt;- pvclust(mydata2, method.hclust = \u0026quot;complete\u0026quot;, method.dist = \u0026quot;euclidean\u0026quot;) plot(fit) + pvrect(fit, alpha=0.90)     Ward\u0026rsquo;s Solution Complete Solution          From the left figure above we can identify that the two larger cluster are significant with an alpha of 0.99 using the Ward\u0026rsquo;s method, while the complete solution results in more and smaller clusters.\nPartitioning Around Medoids (PAM) Partitioning Around Medoids (PAM) is an unsupervised machine learning algorithm for clustering analysis inside the family of HC methods that searches for k representative objects in a data set (k medoids) and then follows to assign each object to the closest medoids thus creating clusters. It can be considered as an alternative to the Ward\u0026rsquo;s solution clustering and it is arguably a more robust methodology than the k means approximation because is less sensitive to noise and outliers due to the use of medoids as cluster centers, the medoids are objects/observation within each cluster for which average dissimilarity between it and all of the other members of the cluster is minimal, instead of means or centroids. Nonetheless and by using this methodology, we can obtain k representative objects that minimize the sum of the dissimilarities of the observations to their closest representative object.\n# Ward's Solution p6 \u0026lt;- fviz_cluster(list(data=mydata, cluster = sub_grp0))+ ggtitle(\u0026quot;Cluster Solution - Ward's method\u0026quot;)+theme_classic() # PAM's Solution pam.res0 \u0026lt;- pam(mydata, 5, metric = \u0026quot;euclidean\u0026quot;, stand = FALSE) # using the pam function print(pam.res0) p7 \u0026lt;- fviz_cluster(list(data=mydata, cluster = pam.res0$clustering))+ ggtitle(\u0026quot;Cluster Solution - PAM method\u0026quot;)+theme_classic() gridExtra::grid.arrange(p6,p7, nrow=1) Medoids: ID no_rotate rotate_body rotate_map head_light landmark navigation zoom 30 29 1.2793762 -1.3378949 -0.8974162 -1.5893542 1.670897 -0.6076631 1.2861607 31 30 -0.6711482 0.7709903 0.6922925 0.2132061 -0.648408 -0.6076631 -0.7761314 25 24 -0.6711482 0.7709903 -0.8974162 0.2132061 -0.648408 1.6528435 1.2861607 8 8 -0.6711482 -1.3378949 1.4871469 -1.5893542 1.670897 0.1458391 1.2861607 27 26 1.9295510 -1.3378949 -0.8974162 0.8140595 -0.648408 -0.6076631 -0.7761314  The printed output above shows the cluster medoids and the clustering vector indicating the cluster to which each point is allocated.\nEvaluating the quality of the partition The following code shows a way to evalulate the quality of the partition by the explained variance percentage of the proposed model and number of clusters.\n# Ward's Solution model \u0026lt;- kmeans(mydata, centers = 5) BSS \u0026lt;- model$betweenss # Between Sum of Squares TSS \u0026lt;- model$totss # Total Sum of Square BSS/TSS*100 # Explained percentage [1] 71.6807 # PAM's Solution model_PAM \u0026lt;- kmeans(mydata, centers = pam.res0$medoids) BSS \u0026lt;- model_PAM$betweenss # Between Sum of Squares TSS \u0026lt;- model_PAM$totss # Total Sum of Square BSS/TSS*100 # Explained percentage [1] 73.20949  Adding classification to the original data The next step will be to add the classification information to the original data\nmydata0 \u0026lt;- data.frame(mydata) # data frame without appending the groups mydata3 \u0026lt;- data.frame(cbind(mydata,cluster = sub_grp0)) # append cluster information from Ward's Solution to original data mydata4 \u0026lt;- data.frame(cbind(mydata,cluster = pam.res0$clustering)) # append cluster information from PAM's Solution df01 \u0026lt;- melt(mydata3, id.var = \u0026quot;cluster\u0026quot;) df02 \u0026lt;- melt(mydata4, id.var = \u0026quot;cluster\u0026quot;) df01$cluster \u0026lt;- as.character(df01$cluster) df02$cluster \u0026lt;- as.character(df02$cluster)  See Silhouette Figure ~ (To be continued\u0026hellip;)\nDescriptive Analyses The following visual analyses will only focus on the classification done with the PAM\u0026rsquo;s algorithm which was found to be slightly superior than the Ward\u0026rsquo;s Solution\nset_var01 \u0026lt;- c('head_light','rotate_body','rotate_map') set_var02 \u0026lt;- c('no_rotate','landmark','navigation','zoom') mini_set01 \u0026lt;- subset(df02,df02$variable %in% set_var01) mini_set02 \u0026lt;- subset(df02,df02$variable %in% set_var02) p00 \u0026lt;- ggplot(data = mini_set01, aes(x=variable, y=value)) + geom_boxplot(aes(fill = cluster),outlier.size = 1) + facet_wrap( ~ cluster, scales=\u0026quot;free\u0026quot;, ncol = 2) + xlab(label = NULL) + ylab(label = NULL) + ggtitle(\u0026quot;Boxplots for 5 Navigation Groups\u0026quot;) + guides(fill=guide_legend(title=\u0026quot;Groups\u0026quot;))+theme_cleveland() p00A \u0026lt;- ggplot(data = mini_set02, aes(x=variable, y=value)) + geom_boxplot(aes(fill = cluster),outlier.size = 1) + facet_wrap( ~ cluster, scales=\u0026quot;free\u0026quot;, ncol = 2) + xlab(label = NULL) + ylab(label = NULL) + ggtitle(\u0026quot;Boxplots for 5 Navigation Groups\u0026quot;) + guides(fill=guide_legend(title=\u0026quot;Groups\u0026quot;))+theme_cleveland()     1st Set of Variables 2nd Set of Variables          Following these results it can be possible to further investigate which variables are significantly different and even opposite between the largest groups (see Dendogram). For doing it Group 5 (Blue) and Group 2 (Yellow) were relabeled as A, thus conforming the cluster in the left side, and Group 1 (Pale blue), Group 3 (Grey) and Group 4 (Red) were relabeled as B, thus conforming the cluster in the right side.\ngr1 \u0026lt;- c(2,5); gr2 \u0026lt;- c(1,3,4) mydata4$new_cluster \u0026lt;- c(NA) for (i in 1:nrow(mydata4)) { if(mydata4$cluster[i] %in% gr1){ mydata4$new_cluster[i] \u0026lt;- c('A') }else if(mydata4$cluster[i] %in% gr2){ mydata4$new_cluster[i] \u0026lt;- c('B') } } df03 \u0026lt;- melt(mydata4, id.var = \u0026quot;new_cluster\u0026quot;) df03$new_cluster \u0026lt;- as.character(df03$new_cluster)  After doing it so the bar plots for the two largest groups identified is as follows\nmini_set03 \u0026lt;- subset(df03,df03$variable %in% set_var01) mini_set04 \u0026lt;- subset(df03,df03$variable %in% set_var02) p000 \u0026lt;- ggplot(data = mini_set03, aes(x=variable, y=value)) + geom_boxplot(aes(fill = new_cluster),outlier.size = 1) + facet_wrap( ~ new_cluster, scales=\u0026quot;free\u0026quot;, ncol = 2) + xlab(label = NULL) + ylab(label = NULL) + ggtitle(\u0026quot;Boxplots for 2 Largest Groups\u0026quot;) + scale_y_continuous(breaks = seq(-2.5,2.5,0.5))+ guides(fill=guide_legend(title=\u0026quot;Groups\u0026quot;))+theme_cleveland()  Table: Comparison between the two largest groups that resulted of the agglomerative HC model with the PAM algorithm for 3 variables: head_light, rotate_body and rotate_map     Variable A Relation B p     rotate_body (轉身體) + \u0026gt; - 0.000   rotate_map (轉地圖) + \u0026gt; - 0.002   head_light (頭燈) + \u0026gt; - 0.005    p000A \u0026lt;- ggplot(data = mini_set04, aes(x=variable, y=value)) + geom_boxplot(aes(fill = new_cluster),outlier.size = 1) + facet_wrap( ~ new_cluster, scales=\u0026quot;free\u0026quot;, ncol = 2) + xlab(label = NULL) + ylab(label = NULL) + ggtitle(\u0026quot;Boxplots for 2 Largest Groups\u0026quot;) + scale_y_continuous(breaks = seq(-2.5,2.5,0.5))+ guides(fill=guide_legend(title=\u0026quot;Groups\u0026quot;))+theme_cleveland()  Table: Comparison between the two largest groups of the HC model for no_rotate, landmark, navigation and zoom  Labeling the two major groups For describing each of the two major groups first we will focus on the variables rotate_body, rotate_map and head_light; for these variables the larger scores were consistently identified for group A, thus subjects classified in group A actively assessed their position in the space in relation to the cues provided by GoogleMaps by rotating their bodies in order to identify the direction of the blue beam that indicates their front as well as rotating the map to match known topographical features of the environment. On the other hand, subjects in group B generally don\u0026rsquo;t rotate their body as a strategy for knowing their direction and significantly checked less the direction of the blue beam. From these observations we could temptatively say that the navigation strategy of group A heavily relies on internal, local and cues with reference to the self, while the the strategy of group B relies on external, global and relationships of the objects in the environment.\nSecondly, we will focus on the variables no_rotate, landmark, navigation and zoom; for these variables the larger scores were consistently identified for group B, this group doesn\u0026rsquo;t perform rotations, thus scoring higher in this behavior; additionaly, actively uses the landmarks displayed in the app and zoom in the image relatively more than group A. The above confirms our initial thoughts on the two main characteristics of these groups in the sense that A relies on local and egocentric cues to larger extent while B relies on global and allocentric cues to a larger extend.\nFrom what we have discussed so far the strategies that best represent these groups in the previous visual representation presented in MTL\u0026rsquo;s thesis are: A combination of the strategies (B) and (F) depcited in the picture above for group A in our results and a combination of the strategies (A) and (C) for group B.\n","date":1610409600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1610409600,"objectID":"848da1ac8d63711c022a93c74ad6c129","permalink":"/project/hyerarchical-analysis/","publishdate":"2021-01-12T00:00:00Z","relpermalink":"/project/hyerarchical-analysis/","section":"project","summary":"Cluster analysis on pedestrian navigation strategies","tags":["Cluster analysis"],"title":"Cluster analysis of navigation data","type":"project"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Charts Academic supports the popular Plotly chart format.\nSave your Plotly JSON in your page folder, for example chart.json, and then add the {{\u0026lt; chart data=\u0026quot;chart\u0026quot; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./line-chart.json\", function(chart) { Plotly.plot('chart-914732586', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n$$f(k;p_0^) = \\begin{cases} p_0^ \u0026amp; \\text{if }k=1, \\\\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Callouts Academic supports a shortcode for callouts, also referred to as asides, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /alert %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Spoilers Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.\n{{\u0026lt; spoiler text=\u0026quot;Click to view the spoiler\u0026quot; \u0026gt;}} You found me! {{\u0026lt; /spoiler \u0026gt;}}  renders as\n Click to view the spoiler  You found me!    Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Nelson Bighetti"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Nelson Bighetti"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":null,"categories":["R"],"content":"  knitr::opts_chunk$set(echo = FALSE) R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots, for example:\nA fancy pie chart.\n  ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"ca0a5a829e73673d99a9e47c6dc0ca86","permalink":"/post/testi/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/post/testi/","section":"post","summary":"knitr::opts_chunk$set(echo = FALSE) R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"ff6a19061a984819d30c916886db56ef","permalink":"/publication/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/example/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]